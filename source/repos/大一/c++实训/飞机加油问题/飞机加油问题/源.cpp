#include<iostream>
using namespace std;
int main()
{
	int n, s, d[100];//定义从i+1机场到中心机场的距离 
	int xiao[100];//定义从i+1机场到中心机场所需最少费用;
	cin >> n >> s;//输入机场数，落地机油费
	int f[10][10];//定义从i+1到j+1机场的直达所需费用
	for (int i = 0; i < n; i++)
	{
		cin >> d[i];
	}
	//输入i地到中心机场的距离
	for(int i=n-1;i>=0;i--)
		for (int j =0; j <i; j++)
		{
			f[i][j] = s + (d[i] - d[j])*(d[i] - d[j]);
			//cout << i+1 << "机场到" << j+1<< "机场直达费用：" << f[i][j] << endl;
		}
	//按公式计算第i+1到j+1机场的直达所需费用
	//cout << endl;
	for (int i = 0; i < n; i++)//从第1个机场开始计算它到中心机场的最少费用
	{
		if (i == 0)
			xiao[i] = xiao[i] * xiao[i] + s;
		//如果他是第一个机场（距离中心机场最近的一个机场），则飞机没有中转选择，直达套公式求费用
		else
		{
			xiao[i] = d[i] * d[i] + s;//初始化第i+1个机场到中心机场的最小费用
			for (int j = 0; j < i; j++)//从机场到中心机场距离小于第i+1个机场中的机场循环
			{
				if (xiao[i] > xiao[j] + f[i][j])
				/*如果说从距离小的机场到中心机场的最短费用,即从j+1到中心机场的最短距离
			    （因为循环从0开始，所以该值已经求出）加上从i+1到j+1的直达费用仍小于上一
				次所求第i+1个机场的最短距离,则将该值赋给xiao[i]*/
				{
					xiao[i] = xiao[j] + f[i][j];
					//cout << i+1 << "机场到中心机场更适合从"<<i+1<<"机场飞到 "<< j+1 << "机场" 
						//<<"在从"<<j+1<<"机场寻找最优方案"<<  endl;//每次改变值显示
				}
			}
			//cout << i + 1 << "机场到中心机场最少费用" << xiao[i] << endl;
			//cout << "-----------------------------------------------" << endl;
		}
	}
	//循环n次,可求出xiao[n-1]
	cout << xiao[n-1];
	system("pause");
	return 0;
}